name: Build and Release WPF App
on:
  push:
    # Exclude non-version tag pushes
    tags:
      - 'v*.*.*'

env:
    PROJECT_ROOT: src/MaraudersModManager/MaraudersModManager/
    PROJECT_NAME: MaraudersModManager.csproj
    PUBLISH_DIR: bin/Release/net6.0-windows/win-x64/publish/*
    ARTIFACT_DIR: bin/Release/
    RELEASE_ZIP_NAME: Release-${{ github.ref_name }}.zip

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Restore NuGet Packages
      run: dotnet restore "${{ env.PROJECT_ROOT }}${{ env.PROJECT_NAME }}"

    - name: Build
      run: dotnet build "${{ env.PROJECT_ROOT }}${{ env.PROJECT_NAME }}" -c Release --clp:ErrorsOnly

    - name: Publish
      run: dotnet publish "${{ env.PROJECT_ROOT }}${{ env.PROJECT_NAME }}" -c Release -r win-x64 /p:PublishSingleFile=true /p:WarningLevel=0 --clp:ErrorsOnly

    - name: Zip Publish Folder
      run: Compress-Archive -Path "${{ env.PROJECT_ROOT }}${{ env.PUBLISH_DIR }}" -DestinationPath "${{ env.PROJECT_ROOT }}${{ env.ARTIFACT_DIR }}${{ env.RELEASE_ZIP_NAME }}"

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: Build-Artifact
        path: ${{ env.PROJECT_ROOT }}${{ env.ARTIFACT_DIR }}${{ env.RELEASE_ZIP_NAME }}
        retention-days: 1

  release:
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: Build-Artifact

    - name: Upload Artifacts
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ env.RELEASE_ZIP_NAME }}
        asset_name: ${{ env.RELEASE_ZIP_NAME }}
        asset_content_type: application/zip


